services: docker

before_install:
  # Environs
  - bash before_install.sh
  - docker -v
  # Stop the postgres instance travis sets up automatically
  - sudo /etc/init.d/postgresql stop
  - sudo service mysql stop
env:
  global:
    - DOCKER_ORG=froggytaipei
    - GOOGLE_APPLICATION_CREDENTIALS=gs_credential.json
    - CLUSTER=froggy-service
    - ZONE=asia-east1-a
    - NGINX_IMAGE=froggy-service-nginx
    - API_IMAGE=froggy-service-api
    - STAGE_NGINX_IMAGE=stage-froggy-service-nginx
    - STAGE_API_IMAGE=stage-froggy-service-api
    - NGINX_DEPLOYMENT=nginx
    - API_DEPLOYMENT=api
    - NGINX_CONTAINER=froggy-service-nginx
    - API_CONTAINER=froggy-service-api
install:
  # Start the docker stuff
  - docker-compose up --build -d
  - sleep 10
script:
  # Code styles
  - docker-compose exec backend sh -c "pycodestyle --exclude=migrations --ignore=E123,E133,E226,E241,E242,E402,E501,W503 ./"
  - docker-compose exec backend sh -c "flake8 --exclude=migrations --ignore=E123,E133,E226,E241,E242,E402,E501,F401,F403,F405,W503 ./"
  # Run tests
  - docker-compose exec backend sh -c "python manage.py test --exclude-tag=mail"
  # Show logs
  - docker-compose logs --tail=20 backend
before_deploy:
  - if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf $HOME/google-cloud-sdk; export CLOUDSDK_CORE_DISABLE_PROMPTS=1; curl https://sdk.cloud.google.com | bash; fi
  - source /home/travis/google-cloud-sdk/path.bash.inc
  - gcloud --quiet version
  - gcloud --quiet components update
  - gcloud --quiet components update kubectl
deploy:
  - provider: script
    script: bash docker_deploy.sh
    skip_cleanup: true
    on:
      branch:
       - release
       - staging
       - master
