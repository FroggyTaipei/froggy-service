version: '3.3'

volumes:
  portainer_data: {}

networks:
  overlay:

services:
  backend:
    image: froggytaipei/froggy-service-api:latest
    volumes:
      - ./backend:/app
    command: /gunicorn.sh
    env_file: .env
    networks:
      - overlay
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints:
         - node.role == manager

  nginx_backend:
    image: nginx:alpine
    ports:
      - "8888:8888"
    depends_on:
      - backend
    networks:
      - overlay
    volumes:
      - ./backend/media/:/media/
      - ./backend/staticfiles/:/staticfiles/
      - ./nginx/backend.conf:/etc/nginx/nginx.conf:ro
    deploy:
        mode: global

  nginx:
    image: froggytaipei/froggy-service-nginx:latest
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - overlay
    volumes:
      - ./nginx/prod.conf:/etc/nginx/nginx.conf:ro
    deploy:
        mode: global

  portainer:
    image: portainer/portainer
    ports:
      - "9000:9000"
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    deploy:
      placement:
        constraints:
         - node.role == manager
