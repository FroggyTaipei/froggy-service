apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "froggy-service.backend" . }}
  labels:
    app.kubernetes.io/name: {{ template "froggy-service.backend" . }}
    helm.sh/chart: {{ include "froggy-service.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.backend.replicasCount }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "froggy-service.backend" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "froggy-service.backend" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
        - name: {{ .Values.serviceAccount.default.name }}
          secret:
            secretName: {{ .Values.serviceAccount.default.name }}
      {{- if .Values.backend.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.backend.nodeSelector | indent 8 }}
      {{- end }}
      containers:
        - name: {{ template "froggy-service.backend" . }}
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          envFrom:
          - secretRef:
              name: {{ template "froggy-service.environment" . }}
          {{- with .Values.backend.command }}
          command:
{{ toYaml . | indent 12 }}
          {{- end }}
          {{- with .Values.backend.args }}
          args:
{{ toYaml . | indent 12 }}
          {{- end }}
          ports:
          - containerPort: {{ .Values.backend.service.targetPort }}
            protocol: TCP
          resources:
{{ toYaml .Values.backend.resources | indent 12 }}
          livenessProbe:
            httpGet:
              path: {{ .Values.backend.livenessPath }}
              port: {{ .Values.backend.service.targetPort }}
            initialDelaySeconds: 15
            timeoutSeconds: 10
            failureThreshold: 30
          readinessProbe:
            httpGet:
              path: {{ .Values.backend.readinessPath }}
              port: {{ .Values.backend.service.targetPort }}
            initialDelaySeconds: 15
            timeoutSeconds: 10
            failureThreshold: 30
          terminationMessagePath: /dev/termination-log
          volumeMounts:
            - name: {{ .Values.serviceAccount.default.name }}
              mountPath: {{ .Values.serviceAccount.default.mountPath }}
              readOnly: true
