version: '3.3'

volumes:
  postgres_data: {}
  portainer_data: {}

networks:
  overlay:

services:
  backend:
    image: froggytaipei/froggy-service-api:latest
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
    command: /gunicorn.sh
    entrypoint: /entrypoint.sh
    env_file: .env
    networks:
      - overlay
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints:
         - node.role == manager

  postgres:
    image: postgres:10-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - overlay
    deploy:
      placement:
        constraints:
         - node.role == manager

  nginx_backend:
    image: nginx:alpine
    ports:
      - "8888:8888"
    depends_on:
      - backend
    networks:
      - overlay
    volumes:
      - ./backend/media/:/media/
      - ./backend/staticfiles/:/staticfiles/
      - ./nginx/backend.conf:/etc/nginx/nginx.conf:ro
    deploy:
        mode: global

  nginx:
    image: froggytaipei/froggy-service-nginx:latest
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - overlay
    volumes:
      - ./nginx/prod.conf:/etc/nginx/nginx.conf:ro
    deploy:
        mode: global

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    stop_grace_period: 1m30s
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints:
         - node.role == manager
